trigger:
  branches:
    include:
      - main

pr:
  branches:
    exclude:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Images
    jobs:
      - job: BuildAndPushDockerImages
        displayName: Build and Push Docker Images to Docker Hub
        steps:
          - checkout: self

          - task: DownloadSecureFile@1
            name: fullchainPem
            inputs:
              secureFile: 'fullchain.pem'

          - task: DownloadSecureFile@1
            name: privkeyPem
            inputs:
              secureFile: 'privkey.pem'

          - script: |
              export COMMIT_ID=$(Build.SourceVersion)
              docker login -u bhandarenakul -p $(DOCKER_PASSWORD)

              # Copy SSL certificates to Nginx folder
              mkdir -p ./nginx/certs
              cp $(fullchainPem.secureFilePath) ./nginx/certs/fullchain.pem
              cp $(privkeyPem.secureFilePath) ./nginx/certs/privkey.pem

              # Validate certificate content
              if ! openssl x509 -in ./nginx/certs/fullchain.pem -text -noout; then
                echo "❌ Invalid SSL certificate"
                exit 1
              fi

              build_and_push() {
                REPO_NAME=$1
                IMAGE_NAME=$2
                CONTEXT_PATH=$3

                echo "Building Image: $IMAGE_NAME"
                docker build -t $REPO_NAME:$IMAGE_NAME-latest-$COMMIT_ID $CONTEXT_PATH

                echo "Pushing Image: $REPO_NAME:$IMAGE_NAME-latest-$COMMIT_ID"
                docker push $REPO_NAME:$IMAGE_NAME-latest-$COMMIT_ID
                if [ $? -eq 0 ]; then
                  echo "✅ Successfully pushed $REPO_NAME:$IMAGE_NAME-latest-$COMMIT_ID"
                else
                  echo "❌ Failed to push $REPO_NAME:$IMAGE_NAME-latest-$COMMIT_ID"
                  exit 1
                fi
              }

              # Build & Push Backend
              build_and_push "bhandarenakul/sproutly-test" "backend" "./backend"

              # Build & Push Frontend
              build_and_push "bhandarenakul/sproutly-test" "frontend" "./frontend"

              # Build & Push Nginx
              build_and_push "bhandarenakul/sproutly-test" "nginx" "./nginx"

              echo "✅ All images built and pushed successfully!"
            displayName: "Build & Push Docker Images"

  - stage: Deploy
    displayName: Deploy to Azure VM
    dependsOn: BuildAndPush
    jobs:
      - deployment: DeployToVM
        displayName: Deploy to Azure Virtual Machine
        environment:
         name: testing
         resourceName: sproutly
         resourceType: virtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    export COMMIT_ID=$(Build.SourceVersion)
                    sudo docker login -u bhandarenakul -p $(DOCKER_PASSWORD)

                    # Install docker-compose
                    sudo apt-get update
                    sudo apt-get install -y python3-pip
                    sudo pip3 install docker-compose

                    # Stop and remove running containers if they exist
                    CONTAINERS=("sproutly-api" "sproutly-frontend" "nginx")
                    for CONTAINER in "${CONTAINERS[@]}"; do
                      if sudo docker ps -a --filter "name=$CONTAINER" | grep -q "$CONTAINER"; then
                        sudo docker stop $CONTAINER || true
                        sudo docker rm $CONTAINER || true
                      fi
                    done

                    # Update image references in docker-compose.yml
                    sed -i "s|bhandarenakul/sproutly-test:backend-latest-.*|bhandarenakul/sproutly-test:backend-latest-${COMMIT_ID}|g" docker-compose.yml
                    sed -i "s|bhandarenakul/sproutly-test:frontend-latest-.*|bhandarenakul/sproutly-test:frontend-latest-${COMMIT_ID}|g" docker-compose.yml
                    sed -i "s|bhandarenakul/sproutly-test:nginx-latest-.*|bhandarenakul/sproutly-test:nginx-latest-${COMMIT_ID}|g" docker-compose.yml

                    # Debugging: Print updated docker-compose.yml
                    cat docker-compose.yml

                    # Run Docker Compose
                    sudo docker-compose -f docker-compose.yml up -d
                  displayName: "Deploy Application"